batch_size = 35
image_size = (128, 128)
0.72 cu mult overfitting la final

model = Sequential()

model.add(Conv2D(filters=32, kernel_size=3, padding='same',
                 input_shape=(image_resize[0], image_resize[1], 1), use_bias=False))
model.add(BatchNormalization())
model.add(ReLU())
model.add(Conv2D(filters=32, kernel_size=3, padding='same', use_bias=False))
model.add(BatchNormalization())
model.add(ReLU())
model.add(MaxPooling2D(strides=2))
model.add(Dropout(0.25))

model.add(Conv2D(filters=64, kernel_size=3, padding='same', use_bias=False))
model.add(BatchNormalization())
model.add(ReLU())
model.add(Conv2D(filters=64, kernel_size=3, padding='same', use_bias=False))
model.add(BatchNormalization())
model.add(ReLU())
model.add(MaxPooling2D(strides=2))
model.add(Dropout(0.25))

model.add(Conv2D(filters=128, kernel_size=3, padding='same', use_bias=False))
model.add(BatchNormalization())
model.add(ReLU())
model.add(Conv2D(filters=128, kernel_size=3, padding='same', use_bias=False))
model.add(BatchNormalization())
model.add(ReLU())
model.add(Conv2D(filters=128, kernel_size=3, padding='same', use_bias=False))
model.add(BatchNormalization())
model.add(ReLU())
model.add(MaxPooling2D(strides=2))
model.add(Dropout(0.25))

model.add(Conv2D(filters=256, kernel_size=3, padding='same', use_bias=False))
model.add(BatchNormalization())
model.add(ReLU())
model.add(Conv2D(filters=256, kernel_size=3, padding='same', use_bias=False))
model.add(BatchNormalization())
model.add(ReLU())
model.add(Conv2D(filters=256, kernel_size=3, padding='same', use_bias=False))
model.add(BatchNormalization())
model.add(ReLU())
model.add(MaxPooling2D(strides=2))
model.add(Dropout(0.25))

model.add(Conv2D(filters=512, kernel_size=3, padding='same', use_bias=False))
model.add(BatchNormalization())
model.add(ReLU())
model.add(Conv2D(filters=512, kernel_size=3, padding='same', use_bias=False))
model.add(BatchNormalization())
model.add(ReLU())
model.add(Conv2D(filters=512, kernel_size=3, padding='same', use_bias=False))
model.add(BatchNormalization())
model.add(ReLU())
model.add(MaxPooling2D(strides=2))
model.add(Dropout(0.5))

model.add(Flatten())
model.add(Dense(512))
model.add(ReLU())
model.add(BatchNormalization())
model.add(Dense(512))
model.add(ReLU())
model.add(BatchNormalization())
model.add(Dense(1, activation='sigmoid', kernel_regularizer=regularizers.l2(0.01)))