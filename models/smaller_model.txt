batch_size = 35
image_size = (128, 128)
0.65 cu invatare lenta

model = Sequential()

model.add(Conv2D(filters=32, kernel_size=3, activation='relu', input_shape=(image_size[0], image_size[1], 1)))
model.add(BatchNormalization())
model.add(Conv2D(filters=32, kernel_size=3, activation='relu'))
model.add(BatchNormalization())
model.add(Dropout(0.3))
model.add(Conv2D(filters=32, kernel_size=5, padding='same', activation='relu', strides=2))
model.add(BatchNormalization())
model.add(MaxPooling2D(pool_size=2))
model.add(BatchNormalization())
model.add(Dropout(0.3))

model.add(Conv2D(filters=64, kernel_size=3, activation='relu'))
model.add(BatchNormalization())
model.add(Conv2D(filters=64, kernel_size=3, activation='relu'))
model.add(BatchNormalization())
model.add(Dropout(0.3))
model.add(Conv2D(filters=64, kernel_size=5, padding='same', activation='relu', strides=2))
model.add(BatchNormalization())
model.add(MaxPooling2D(pool_size=2))
model.add(BatchNormalization())
model.add(Dropout(0.3))

model.add(Flatten())
model.add(Dense(64, activation='relu'))
model.add(BatchNormalization())
model.add(Dropout(0.3))

model.add(Dense(1, activation='sigmoid'))